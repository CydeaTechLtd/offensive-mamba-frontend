import React, { Component } from 'react';
import { Container, Row, Col } from 'reactstrap'
import Code from 'react-code-prettify';
import API from '../../api'
class ExploreExploit extends Component {
    constructor(props) {
        super(props)
        if (props.match == undefined || props.match == null || props.match.params === {}) {
            this.state = { exploit: null, loading: false }
        } else {
            this.state = { exploit: props.match.params[0], loading: true, vulnersInfo: null }
        }
    }
    async componentDidMount() {
        if(this.state.exploit != null) {
            var response = await API.searchVulnersByID(this.state.exploit)
            if(response.id !== undefined) {
                this.setState({vulnersInfo: response.data})
            }
        }
    }

    render() {

        let codeStr = `
def hello():
    print("Hello World")
if __name__ == "__main__":
    hello()
        `
        return (
            <Container fluid={true} >
                <Row>
                    <Col xs="2">
                        <img src="https://vulners.com/static/img/metasploit.webp" />
                    </Col>
                    <Col>
                        <Row><h2>Jenkins CLI HTTP Java Deserialization Vulnerability</h2></Row>
                        <Row>MSF:EXPLOIT/LINUX/MISC/JENKINS_LDAP_DESERIALIZE</Row>
                        <Row>2017-01-11 23:23:02</Row>
                    </Col>
                </Row>
                <Container>
                    <Row>
                        <Row><h3>Description</h3></Row>
                        <Row>This module exploits a vulnerability in Jenkins. An unsafe deserialization bug exists on the Jenkins, which allows remote arbitrary code execution via HTTP. Authentication is not required to exploit this vulnerability.</Row>
                    </Row>
                    <Row>
                        <Code codeString={codeStr} />
                    </Row>
                </Container>
            </Container>)
    }
}

export default ExploreExploit